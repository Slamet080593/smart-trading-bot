const axios = require('axios');
const { RSI, SMA, MACD } = require('technicalindicators');

// Telegram setup
const TELEGRAM_TOKEN = '7086211397:AAGotudtgcHMhiS0d79k840IN_fMhH5QAnE';
const CHAT_ID = '1775772121';

// Twelve Data API
const TWELVE_API_KEY = '6c8dca5076544546aabd5fb36c9895e2';

// Crypto list from CoinCap
const cryptoList = ['bitcoin', 'ethereum', 'binance-coin', 'solana', 'ripple'];

// Forex list
const forexPairs = ['EUR/USD', 'GBP/USD', 'USD/JPY', 'AUD/USD', 'USD/CHF', 'EUR/CHF', 'NZD/USD', 'USD/CAD', 'EUR/JPY', 'GBP/JPY'];

async function getCryptoHistory(coin) {
    try {
        const res = await axios.get(`https://api.coincap.io/v2/assets/${coin}/history?interval=h1`);
        return res.data.data.map(item => parseFloat(item.priceUsd)).slice(-100);
    } catch (err) {
        console.error(`Error Crypto ${coin}:`, err.message);
        return null;
    }
}

async function getForexData(pair) {
    try {
        const [symbol1, symbol2] = pair.split('/');
        const symbol = `${symbol1}${symbol2}`;
        const res = await axios.get(`https://api.twelvedata.com/time_series?symbol=${symbol}&interval=1h&outputsize=100&apikey=${TWELVE_API_KEY}`);
        return res.data.values.map(item => parseFloat(item.close)).reverse();
    } catch (err) {
        console.error(`Error Forex ${pair}:`, err.message);
        return null;
    }
}

function analyze(prices) {
    if (prices.length < 50) return null;

    const rsi = RSI.calculate({ values: prices, period: 14 });
    const ma50 = SMA.calculate({ values: prices, period: 50 });
    const ma200 = SMA.calculate({ values: prices, period: 200 });
    const macd = MACD.calculate({ values: prices, fastPeriod: 12, slowPeriod: 26, signalPeriod: 9, SimpleMAOscillator: false, SimpleMASignal: false });

    const lastRSI = rsi[rsi.length - 1];
    const lastMA50 = ma50[ma50.length - 1];
    const lastMA200 = ma200[ma200.length - 1];
    const lastMACD = macd[macd.length - 1];

    const currentPrice = prices[prices.length - 1];

    if (!lastRSI || !lastMA50 || !lastMA200 || !lastMACD) return null;

    if (lastRSI < 30 && lastMA50 > lastMA200 && lastMACD.histogram > 0) {
        return { action: 'BUY', price: currentPrice };
    } else if (lastRSI > 70 && lastMA50 < lastMA200 && lastMACD.histogram < 0) {
        return { action: 'SELL', price: currentPrice };
    } else {
        return null;
    }
}

async function main() {
    let message = `Sinyal Trading:\n`;

    // Forex
    for (const pair of forexPairs) {
        const prices = await getForexData(pair);
        if (prices) {
            const analysis = analyze(prices);
            if (analysis) {
                message += `- ${analysis.action} ${pair} at ${analysis.price.toFixed(5)}\n`;
            }
        }
    }

    // Crypto
    for (const coin of cryptoList) {
        const prices = await getCryptoHistory(coin);
        if (prices) {
            const analysis = analyze(prices);
            if (analysis) {
                message += `- ${analysis.action} ${coin.toUpperCase()} at ${analysis.price.toFixed(2)}\n`;
            }
        }
    }

    if (message.trim() === 'Sinyal Trading:') {
        message = 'Yah ga ada sinyal bosku.';
    } else {
        message += `\nAuto generated by SmartBot.`;
    }

    await axios.post(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
        chat_id: CHAT_ID,
        text: message
    });

    console.log('Sinyal terkirim:', message);
}

main();
